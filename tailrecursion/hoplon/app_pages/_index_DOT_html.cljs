(ns tailrecursion.hoplon.app-pages._index_DOT_html (:require [hoplon.twitter.bootstrap :refer [container]] [tailrecursion.hoplon.reload :refer [reload-all]] [tailrecursion.javelin :refer [alts! cell-map propagate! next-rank deref* lift cell input? cell-doseq* bf-seq destroy-cell! last-rank set-cell! set-formula! cell?]] [tailrecursion.hoplon :refer [script do! track article noscript command h4 h3 mark basefont h5 span input h2 th label h6 pre nav vector?* address sup h1 table font option datalist u safe-nth on! footer select q samp source summary li p td noframes node? iframe rel tr s *initfns* add-attributes! colgroup relx html dfn optgroup tbody text-val! ul hgroup sub strong data progress loop-tpl* acronym append-child replace-children! img details fieldset html-head em html-time rt when-dom video keygen div val-id dt ol link init form is-ie8 check-val! menu timeout del a parse-args area legend hr dir header param meter tfoot blockquote eventsource b dl figcaption caption route-cell style rel-event abbr ruby applet html-meta bdi embed rp figure on-append! canvas section object strike title button output audio initialized? add-children! dd bdo cite code kbd big seq?* frame rely col tt i ins thead unsplice isindex frameset center spliced base $text by-id $comment br textarea wbr html-map small add-initfn! html-body aside html-var]]) (:require-macros [macros.core :refer [demo-dirs]] [tailrecursion.javelin :refer [cell-doseq cell= defc defc= mx with-let prop-cell mx2 cell-let set-cell!= macroexpand-all]] [tailrecursion.hoplon :refer [with-init! body text defelem loop-tpl head with-timeout with-interval def-values flatten-expr]]))

(clojure.core/defn ^:export hoploninit [] (reload-all) (def url:hoplon "http://hoplon.io") (def url:hoplon-demos "https://github.com/tailrecursion/hoplon-demos") (def url:hoplon-discuss "http://hoplon.discoursehosting.net") (defelem demo-item [_ [name]] (li :class "list-group-item" (a :href name name))) (defelem copyright-footer [_ _] (div :css {:padding "30px 0px"} (div :css {:text-align "center"} "Copyright © Alan Dipert and Micha Niskin. All rights reserved."))) (html (head (title "Hoplon • Demos")) (body (div :class "jumbotron" (container :class "lambda" (h1 "Hoplon Demos") (p "A simpler way to program the web, with examples!"))) (container (div :col {:sm 6} (p "Check out the demos, then try these links:") (ul (li (a :href url:hoplon "The main Hoplon website.")) (li (a :href url:hoplon-demos "Source code for all demos is here.")) (li (a :href url:hoplon-discuss "Join the Hoplon discussion group.")) (li "Check out the " (code "#hoplon") " channel on Freenode IRC."))) (div :col {:sm 6} (ul :class "list-group" (mapv demo-item (demo-dirs))))) (hr) (copyright-footer))) (tailrecursion.hoplon/init))
