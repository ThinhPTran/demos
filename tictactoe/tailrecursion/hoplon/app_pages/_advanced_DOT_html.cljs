(ns tailrecursion.hoplon.app-pages._advanced_DOT_html (:require [tailrecursion.hoplon-demos.tictactoe :as tictactoe] [tailrecursion.javelin :refer [alts! cell-map propagate! next-rank deref* lift cell input? cell-doseq* bf-seq destroy-cell! last-rank set-cell! set-formula! cell?]] [tailrecursion.hoplon :refer [script do! track article noscript command h4 h3 mark basefont h5 span input h2 th label h6 pre nav vector?* address sup h1 table font option datalist u safe-nth on! footer select q samp source summary li p td noframes node? iframe rel tr s *initfns* add-attributes! colgroup relx html dfn optgroup tbody text-val! ul hgroup sub strong data progress loop-tpl* acronym append-child replace-children! img details fieldset html-head em html-time rt when-dom video keygen div val-id dt ol link init form is-ie8 check-val! menu timeout del a parse-args area legend hr dir header param meter tfoot blockquote eventsource b dl figcaption caption route-cell style rel-event abbr ruby applet html-meta bdi embed rp figure on-append! canvas section object strike title button output audio initialized? add-children! dd bdo cite code kbd big seq?* frame rely col tt i ins thead unsplice isindex frameset center spliced base $text by-id $comment br textarea wbr html-map small add-initfn! html-body aside html-var]]) (:require-macros [tailrecursion.javelin :refer [cell-doseq cell= defc defc= mx with-let prop-cell mx2 cell-let set-cell!= macroexpand-all]] [tailrecursion.hoplon :refer [with-init! body text defelem loop-tpl head with-timeout with-interval def-values flatten-expr]]))

(clojure.core/defn ^:export hoploninit [] (defc winners nil) (html {:lang "en"} (head (link {:rel "stylesheet", :href "screen.css"}) (title "Hoplon â€¢ Tic Tac Toe")) (body (h1 "The tictactoe.game HTML Element") (p "\n      This page demonstrates the use of a custom DOM element,\n      implemented in ClojureScript, to include two instances of\n      differently parameterized Tic Tac Toe games.\n    ") (p "\n      The first tag on this page imports the tailrecursion.hoplon-demos.tictactoe library\n      and defines a cell in which to store the historical record of winners:\n    ") (pre "<script type=\"text/hoplon\">\n  (page \"advanced.html\"\n    (:require [tailrecursion.hoplon-demos.tictactoe :as tictactoe]))\n\n  (defc winners nil)\n</script>    ") (h2 "Small Board") (pre "<tictactoe.game size=\"3\"/>    ") (tictactoe/game {:size "3"}) (h2 "Big Board") (pre "<tictactoe.game size=\"5\"/>    ") (tictactoe/game {:size "5"}) (h2 "Wire Up A Scoreboard") (pre "<tictactoe.game style=\"float:left\" size=\"3\" history=\"{{ winners }}\"/>\n<tictactoe.scoreboard history=\"{{ winners }}\"/>    ") (tictactoe/game {:size "3", :history winners, :style "float:left"}) (tictactoe/scoreboard {:history winners}) (div {:style "clear:both"}) (div {:style "padding-top: 20px;padding-bottom:50px;"} (a {:shape "rect", :href "https://github.com/tailrecursion/hoplon-demos/blob/master/tictactoe/src/advanced.html.hl"} "Source Code")))) (tailrecursion.hoplon/init))
