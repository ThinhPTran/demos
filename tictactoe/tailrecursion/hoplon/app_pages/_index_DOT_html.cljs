(ns tailrecursion.hoplon.app-pages._index_DOT_html (:require [tailrecursion.javelin :refer [alts! cell-map propagate! next-rank deref* lift cell input? cell-doseq* bf-seq destroy-cell! last-rank set-cell! set-formula! cell?]] [tailrecursion.hoplon :refer [script do! track article noscript command h4 h3 mark basefont h5 span input h2 th label h6 pre nav vector?* address sup h1 table font option datalist u safe-nth on! footer select q samp source summary li p td noframes node? iframe rel tr s *initfns* add-attributes! colgroup relx html dfn optgroup tbody text-val! ul hgroup sub strong data progress loop-tpl* acronym append-child replace-children! img details fieldset html-head em html-time rt when-dom video keygen div val-id dt ol link init form is-ie8 check-val! menu timeout del a parse-args area legend hr dir header param meter tfoot blockquote eventsource b dl figcaption caption route-cell style rel-event abbr ruby applet html-meta bdi embed rp figure on-append! canvas section object strike title button output audio initialized? add-children! dd bdo cite code kbd big seq?* frame rely col tt i ins thead unsplice isindex frameset center spliced base $text by-id $comment br textarea wbr html-map small add-initfn! html-body aside html-var]]) (:require-macros [tailrecursion.javelin :refer [cell-doseq cell= defc defc= mx with-let prop-cell mx2 cell-let set-cell!= macroexpand-all]] [tailrecursion.hoplon :refer [with-init! body text defelem loop-tpl head with-timeout with-interval def-values flatten-expr]]))

(clojure.core/defn ^:export hoploninit [] (html {:lang "en"} (head (link {:rel "stylesheet", :href "screen.css"}) (title "Hoplon â€¢ Tic Tac Toe")) (body (h1 "Tic Tac Toe in Hoplon") (p (a {:shape "rect", :href "http://hoplon.io"} "Hoplon") " is a set of libraries and tools for creating dynamic web applications.\n    ") (p "This project demonstrates a Hoplon Tic Tac Toe in two ways:") (ol (li (a {:shape "rect", :href "basic.html"} "basic.cljs.hl") " - a Hoplon file in ClojureScript syntax that compiles into a game of Tic Tac Toe.\n      ") (li (a {:shape "rect", :href "advanced.html"} "advanced.html.hl") " - a Hoplon file in HTML syntax that uses a custom DOM element defined in a separate ClojureScript library.  Every instance of this custom DOM element can be parameterized differently when it is included in markup.\n      ")) (p (a {:shape "rect", :href "https://github.com/tailrecursion/hoplon-demos/tree/master/tictactoe"} "Source Code")))) (tailrecursion.hoplon/init))
